events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Handle Vue.js router (SPA) - Enhanced version
        location / {
            # Try exact file, then directory, then fallback to index.html
            try_files $uri $uri/ /index.html;
            
            # Optional: Add headers for SPA routes
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Alternative: More specific handling for API routes (if you add backend later)
        location /api/ {
            # Proxy to backend API (future enhancement)
            # proxy_pass http://backend;
            return 404; # For now, return 404 for API routes
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Serve robots.txt and sitemap.xml directly
        location = /robots.txt {
            access_log off;
            log_not_found off;
            expires 7d;
        }

        location = /sitemap.xml {
            access_log off;
            log_not_found off;
            expires 1d;
            add_header Content-Type application/xml;
        }

        # PWA manifest
        location = /manifest.json {
            expires 7d;
            add_header Content-Type application/json;
        }

        # Security - deny access to sensitive files
        location ~ /\. {
            deny all;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}